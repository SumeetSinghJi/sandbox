cmake_minimum_required(VERSION 3.15)
project(sandbox VERSION 0.1)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}")

if(WIN32)
    set(Boost_INCLUDE_DIR "C:/Program Files/boost")
    set(PLATFORM_LIBS ws2_32)
endif()

if(APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fcolor-diagnostics -fansi-escape-codes -g -std=c++17 -stdlib=libc++ -I/opt/homebrew/include -I/opt/homebrew/Cellar/boost/1.85.0/include")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/opt/homebrew/lib -L/opt/homebrew/Cellar/boost/1.85.0/lib")
endif()

if(UNIX AND NOT APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++17 -I/usr/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/usr/lib")
endif()

find_package(Boost REQUIRED)

file(GLOB SOURCES
    ${CMAKE_SOURCE_DIR}/src/*.cpp
)

add_executable(sandbox
    ${CMAKE_SOURCE_DIR}/main.cpp
    ${SOURCES}
)

include_directories(
    ./headers
    ${Boost_INCLUDE_DIR}
)

target_link_libraries(sandbox
    ${Boost_LIBRARIES}
    ${PLATFORM_LIBS}
)
